### 주선자2용 회원 가입
## provider 는 test 고정이다.
POST http://{{host}}/api/v1/auth/login/test
Content-Type: application/json

{
  "provider": "apple"
}

> {%
    client.test("SignIn Or Login", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.payload.accessToken.length > 0); // 토큰 길이가 0보다 크면 통과
    });

    client.log(response.body.payload.accessToken);
    client.global.set("matchmaker_accessToken2", response.body.payload.accessToken)
%}

### 주선자2용 실명 인증
POST http://{{host}}/api/v1/members/name
Content-Type: application/json
Authorization: Bearer {{matchmaker_accessToken2}}

{
  "name": "주선자2"
}

### 주선자2용 타입 확인
GET http://{{host}}/api/v1/members/type
Content-Type: application/json
Authorization: Bearer {{matchmaker_accessToken2}}


### 후보자2 초대용 회원 가입
POST http://{{host}}/api/v1/auth/login/test
Content-Type: application/json

{
  "provider": "apple"
}

> {%
    client.test("SignIn Or Login", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.payload.accessToken.length > 0); // 토큰 길이가 0보다 크면 통과
    });

    client.log(response.body.payload.accessToken);
    client.global.set("candidate_accessToken2", response.body.payload.accessToken)
%}

### 후보자2 실명 인증
POST http://{{host}}/api/v1/members/name
Content-Type: application/json
Authorization: Bearer {{candidate_accessToken2}}

{
  "name": "후보자2"
}

### 후보자2 타입 확인
GET http://{{host}}/api/v1/members/type
Content-Type: application/json
Authorization: Bearer {{candidate_accessToken2}}

