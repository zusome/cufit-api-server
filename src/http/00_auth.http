### 어드민 회원 가입
## provider 는 test 고정이다.
POST http://{{host}}/api/v1/auth/login/test
Content-Type: application/json

{
  "email": "admin",
  "provider": "admin",
  "username": "admin"
}

> {%
    client.test("SignIn Or Login", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.payload.accessToken.length > 0); // 토큰 길이가 0보다 크면 통과
    });

    client.log(response.body.payload.accessToken);
    client.global.set("accessToken", response.body.payload.accessToken)
%}

### 주선자용 회원 가입
## provider 는 test 고정이다.
POST http://{{host}}/api/v1/auth/login/test
Content-Type: application/json

{
  "provider": "apple"
}

> {%
    client.test("SignIn Or Login", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.payload.accessToken.length > 0); // 토큰 길이가 0보다 크면 통과
    });

    client.log(response.body.payload.accessToken);
    client.global.set("maker_accessToken", response.body.payload.accessToken)
%}

### 주선자용 실명 인증
POST http://{{host}}/api/v1/members/name
Content-Type: application/json
Authorization: Bearer {{maker_accessToken}}

{
  "name": "주선자"
}

### 주선자용 타입 확인
GET http://{{host}}/api/v1/members/type
Content-Type: application/json
Authorization: Bearer {{maker_accessToken}}


### 후보자 초대용 회원 가입
POST http://{{host}}/api/v1/auth/login/test
Content-Type: application/json

{
  "provider": "apple"
}

> {%
    client.test("SignIn Or Login", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.payload.accessToken.length > 0); // 토큰 길이가 0보다 크면 통과
    });

    client.log(response.body.payload.accessToken);
    client.global.set("candidate_accessToken", response.body.payload.accessToken)
%}

### 후보자용 실명 인증
POST http://{{host}}/api/v1/members/name
Content-Type: application/json
Authorization: Bearer {{candidate_accessToken}}

{
  "name": "후보자"
}

### 후보자용 타입 확인
GET http://{{host}}/api/v1/members/type
Content-Type: application/json
Authorization: Bearer {{maker_accessToken}}

### 후보자용 인증번호 발송
POST http://{{host}}/api/v1/auth/sms/issue
Content-Type: application/json
Authorization: Bearer {{candidate_accessToken}}

{
    "phoneNumber": ""
}

> {%
    client.test("Issue SMS Auth Code", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
    });
%}

### 후보자용 인증번호 확인
POST http://{{host}}/api/v1/auth/sms/verify
Content-Type: application/json
Authorization: Bearer {{candidate_accessToken}}

{
  "phoneNumber": "",
    "authCode": "444155"
}

> {%
    client.test("Verify SMS Auth Code", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
    });
%}
